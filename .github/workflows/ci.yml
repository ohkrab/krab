name: Test

permissions:
  contents: write

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.3-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: secret
          POSTGRES_USER: krab
          POSTGRES_DB: krab
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - uses: actions/cache@v2
        if: ${{ !env.ACT }}
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run tests
        env:
          DATABASE_URL: "postgres://krab:secret@localhost:5432/krab?sslmode=disable&prefer_simple_protocol=true"
        run: |
          mkdir -p bin/
          go test -v ./...

  release_nightly:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Run docker_nightly
        run: make docker_nightly

  release:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

